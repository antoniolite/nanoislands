func nb-radio-button(nodeset options) {
    default = {
        'size': 'm'
        'theme': 'normal'
        'type': 'radio'
    }

    _nb-block('radio-button', _nb-extend(default, options))
}

match .radio-button nb {
    <div>
         _size-theme-type-class({
            'name': 'radio-button'
            'size': .size
            'theme': .theme
         })

        @class += " nb-group"

        controlName = 'radio-button_{_nb-uniq()}'

        apply . nb-main-attrs
        for .group {

            uniq = 'nb-radio-button_{_nb-uniq()}'
            <span class="_nb-radio-button-button nb-complex-group-item">
                <input class="_nb-radio-button-radio" type="radio" value="{ .value }" id="{ uniq }">
                    if .checked {
                        @checked = 'checked'
                    }
                    if .disabled {
                        @disabled = 'disabled'
                    }

                    if (.tabindex && !.disabled) {
                        @tabindex = .tabindex
                    }

                    @name = (
                            if (.name) {
                                .name
                            } else if (.attrs.name) {
                                .attrs.name
                            } else if (..name) {
                                ..name
                            } else {
                                controlName
                            }
                        )

                </input>

                nb-button(_nb-extend(., {
                    'class': [
                        'nb-complex-group-item-subject'
                        'js-button'
                    ]
                    'type': 'label'
                    'static': true()
                    'id': false()
                    'size': ..size
                    'attrs': {
                        'for': uniq
                        'data-value': .value
                    }
                }))

            </span>

        }

    </div>
}
